// @import '../../bower_components/meetup-swatches/sass/colors';
// @import '../../bower_components/sassquatch2/sass/globals';
@import '../../bower_components/sassquatch2/sass/util';
@import 'colors-rebrand';
@import 'tweaks'; // TO BE CONSIDERED AS GLOBAL CHANGES
@import 'icons';
@import 'nav';

/*
*****************************
SQ3 CANDIDATE
*****************************
*/

/*
-----------------------------
	TYPE
-----------------------------
*/
// $font : "Graphik", helvetica, arial, sans-serif;

/* _body-text.scss */
// body {
// 	font-family: $font;
// }

._proto_text--green {
	color: $C_success;
}

/*
a {
	color: inherit;
	text-decoration: none;
	&.link,
	.runningText & {
		@extend %link;
		&.button {
			text-decoration: none;
		}
	}
}
*/

/* _headings.scss
.text--display {
	font-weight: $W_bold;

	// mimicking newer sassquatch styles
	line-height: 1.25;
}

// mimicking newer sassquatch styles
.text--display2 {
	font-size: 34px;
}

.text--headline {
	font-weight: $W_bold;
}
*/

/* _type.scss
%link {
	@include color-all($C_link);
	&:hover, &:focus, &:active {
		text-decoration: underline;
	}
}
*/

/*
-----------------------------
	LAYOUT
-----------------------------
*/

/* _stripe.scss */
.stripe-heroContent--full { // new variant
	max-width: none;
	width: 100%;
}

.stripe--inverted {
	background-color: $C_contentBGInverted; // no change, just different color
}

.stripe--noBorder { // new variant
	border-width: 0px !important;
	padding-top: $space-double;
}

// fixes to stripe-overlap
.stripe--overlap {
	position: relative;
	.bounds {
		position: relative;
	}
}
.stripe--overlap:not(.stripe--hero),
.stripe--overlap:not(.stripe--photoHero) {
	&:before {
		border-top: 1px solid $C_border;
	}
}

/* _gridList.scss */
.gridList {
	> li {
		padding-bottom: $space-double;
	}
}

.gridList-item {
	padding-bottom: $space-double;
}

/* _inlineblockList.scss */
.inlineblockList--bulleted > li {

	&:after {
		content: 'Â·';
		padding-left: $space-half;
	}

	.attachment & {
		padding-right: $space-quarter;

		&:after {
			padding-left: $space-quarter;
		}
	}


	&:last-child {
		&:after {
			display: none;
		}
	}
}

.hscroll-content > li {
	white-space: normal;
}

/*
-----------------------------
	UI COMPONENTS
-----------------------------
*/

/* _buttons.scss */
$_hoverChange: 8%;

.button {
	background: $C_accent;
	box-shadow: none !important;
	color: $C_textPrimaryInverted;
	line-height: $line-height; // temporary hacky fix for weird button text alignment
	//min-height: ($font-size * $line-height) + $space;
	padding: $space-half $space;

	use {
		fill: $C_textPrimaryInverted;
	}

	&:hover {
		background: lighten($C_accent, $_hoverChange) !important;
	}
}

.button--primary {
	background: $C_accent !important;
	&:hover {
		background: darken($C_accent, $_hoverChange) !important;
	}
}

// .button--small { //
// 	min-height: 0;
// }

/* same as in old SQ2, but with rebrand colors */
.button--bordered {
	// @include color-all($C_link);
	background: transparent !important;
	border: 1px solid $C_border;
	color: $C_textPrimary;
	font-weight: $W_medium;
	// &:hover,
	// &:active,
	// &:focus {
	// 	background: transparentize($C_link, .8) !important;
	// }

	// .inverted & {
	// 	color: $C_textPrimaryInverted;
	// 	border-color: 1px solid $C_textPrimaryInverted;
	// 	&:hover,
	// 	&:active,
	// 	&:focus {
	// 		background: opacify($C_textPrimaryInverted, .8) !important;
	// 		color: $C_textPrimary;
	// 	}
	// }

}

.button--contrast {
	background: $C_contentBG !important;
	color: $C_textPrimary;
	font-weight: $W_normal;
	&:hover,
	&:active,
	&:focus {
		background: transparentize($C_textPrimaryInverted, .2) !important;
	}
}

.button--facebook {
	background: $C_facebook;
}

/* _card.scss */
// .card--group {
// 	border-top: none;
// 	display: block; // killing @include valignChildren(bottom);
// 	line-height: $line-height; // killing @include valignChildren(bottom);
// 	&:before { display: none; } // killing @include textProtectionScrim();
// }

/* NEW: _priorityPlus.scss */
.priorityPlus {
	@include valignChildren;
	min-height: $block-2;
	position: relative;
}
.priorityPlus-list {
	@include display(flex);
	overflow: hidden;
}
.priorityPlus-showAll {
	@include valignChildren;
	background: $C_contentBG;
	bottom: 0;
	box-shadow: -#{$space-half} 0 $space $C_contentBG;
	position: absolute;
	right: 0;
	top: 0;
	z-index: 1;

	.stripe--collection & {
		box-shadow: -#{$space-half} 0 $space $C_collectionBG;
	}

	.inverted & {
		box-shadow: -#{$space-half} 0 $space $C_contentBGInverted;
	}
}
.priorityPlus-showAll.display--none{ // not obeying regular display--none
	@include display(none);
}

.priorityPlus--overflowing .priorityPlus-list li:last-child {
	padding-right: 5em; // set a real thing in js
}

.priorityPlus--expanded {
	.priorityPlus-list {
		@include display(block);
	}

	.priorityPlus-showAll {
		border-bottom: 1px solid $C_border;
		position: relative;
		box-shadow: none;
		text-align: right;
	}
}

/* _tabs.scss */
$_tabBorder: 4px; // no change, just needed the var
.tabs-tab--selected {
	color: $C_accent;
	border-bottom: $_tabBorder solid $C_accent;
}

.tabs--vert {
	.tabs-tab {
		@include display(block);
		border-bottom: 1px solid $C_border;
		padding: $space-half $space-half $space-half ($space-half+$_tabBorder);
		margin-left: 0;
	}
	.tabs-tab--selected {
		border-left: $_tabBorder solid $C_accent;
		border-bottom: 1px solid $C_border;
		padding: $space-half;
	}
}

/* NEW: _well.scss */
/* Mike P: I don't think this should be it's own 'ui component'. Where does it belong? */
.well {
	background: $C_collectionBG;
}


/*
-----------------------------
	PROTOTYPE ONE-OFF
-----------------------------
*/

// App carousel styles
.cell-content {
	max-width: 40em;
}

// Story carousel
.stories-cell {
	width: 100%;
}

.storiesNavContainer {
	@include atMediaUp(large) {
		position: absolute;
		right: 0;
		z-index: 999;
		padding: $space;
		margin: $space 0;
		height: 100%;
		box-sizing: border-box;
	}
}

.storiesNav {
	@include atMediaUp(large) {
		position: relative;
		top: 50%;
		transform: translateY(-50%);
	}
}

// Ideally, I'd be able to just be
// able to set this with `media--m`
.footerScript {
	height: $media-m;
	width: auto;
}

// Kill the view-head
.view-head {
	display: none !important;
}

// Full video bg
// NOTE: need a x-browser solution
.videoFill {
	display: none;
	position:absolute;
	object-fit: cover;
	width: 100%;
	height: 100%;

	@include atMediaUp(medium) {
		display: block;
	}

}

._proto_playBtn {
	border-radius: 999px;
	height: $media-m;
	opacity: .5;
	padding: 0;
	width: $media-m;
	display: inline-flex;

	@include atMediaUp(medium) {
		display: none;
	}

	.icon {
		height: $media-s;
		width: $media-s;

		use {
			fill: $C_textSecondary
		}

	}

}

.stripe-heroContent {
	padding-top: 0;
}

// "Download the app" buttons
.appBadge {
	background: black;
	border-radius: $defaultRadius;
	// margin-right: $space-half;
	// width: 47.7%;
	@include atMediaUp(medium) {
		width: auto;
	}
}

// ONLY FOR THE BOARD DEMO. KILL THIS STYLE WITH FILE
.ghettoScrim {
	min-height: 70vh;
	margin-top: $view-head-height;

	@include atMediaUp(medium) {
		min-height: $block-6;
		margin-top: $view-head-height-tablet;
		// .stripe-heroContent {
		// 	min-height: 0;
		// }
	}

	&:before {
		background-color: transparentize($C_black, .8);
		background-image: none;
		z-index: 1;
    background-blend-mode: screen;
	}

	.stripe-heroContent {
		z-index: 1;
		min-height: 0;
	}
}

.mainNav--photoOverlay {
	background: -webkit-linear-gradient(transparentize($C_contentBGInverted, .5), transparentize($C_contentBGInverted, 1));
	background: linear-gradient(transparentize($C_contentBGInverted, .5), transparentize($C_contentBGInverted, 1));
	box-shadow: none;
}

._proto_nav-icon {
	margin-right: $space-quarter;
}

._proto_appMock-container {
	max-width: $block-6;
	margin: 0 auto;

	@include atMediaUp(medium) {
		width: 33% !important;
	}

	@include atMediaUp(large) {
		width: 50% !important;
	}
}

// MUG Carousel styles
.flickity-prev-next-button {
	top: 80px; // half of card height
	transform: translateY(-50%); // used to "center" it
	-webkit-transform: translateY(-50%);

	&:hover {
		background: transparent;
	}

}

.flickity-prev-next-button .arrow {
	fill: $C_accent;
}

.flickity-prev-next-button.next {
	right: $space + $space-half; // "$space" accounts for cell padding, "$space-half" gives the arrow a little room to breath
}

.flickity-prev-next-button.previous {
	left: $space-half; // no left cell padding, so "$space-half" gives the arrow a little room to breath
}

@media only screen and (min-width: 1112px) { //$bounds-wide area excluding padding (1068px) plus arrow width (44px)
	.flickity-prev-next-button.next {
		right: -28px; // negative value of arrow size (44px) + $space (16px)
	}

	.flickity-prev-next-button.previous {
		left: -44px; // negative value of arrow size (44px)
	}

	.flickity-prev-next-button {
		background: transparent;
	}
}

@include atMediaUp(medium) {
	.atMedium_gridList--has2 .flickity-slider .gridList-item {
		width: 50%;
	}
}

@include atMediaUp(large) {
	.atLarge_gridList--has4 .flickity-slider .gridList-item {
		width: 25%;
	}
}
